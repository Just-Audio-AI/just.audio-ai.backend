version: '3.9'

services:
  frontend:
    image: saidmagomedov/frontend-app:latest
    container_name: frontend
    depends_on:
      - app
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - appnet

  app:
    image: saidmagomedov/backend-app:latest
    container_name: app
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      BASE_URL: ${BASE_URL}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      WISPER_AI_BASE_URL: ${WISPER_AI_BASE_URL}
      PROXY_URL: ${PROXY_URL}
    ports:
      - "8000"
    volumes:
      - /home/app/models:/app/src/ai_models:ro
    networks:
      - appnet

  redis:
    image: redis:7
    networks:
      - appnet

  minio:
    image: minio/minio:RELEASE.2024-09-13T20-26-02Z
    command: server /data --console-address :9001
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    volumes:
      - minio_data:/data
    networks:
      - appnet
saidmagomedov/backend-worker-enhace
  worker:
    image: saidmagomedov/backend-worker:latest
    depends_on:
      - redis
    environment:
      REDIS_URL: ${REDIS_URL}
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - /home/app/models:/app/src/ai_models:ro
    networks:
      - appnet

  enhance_worker:
    image: saidmagomedov/backend-worker-enhance:latest
    container_name: enhance_worker
    environment:
      REDIS_URL: ${REDIS_URL}
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - /home/app/models:/app/src/ai_models:ro
    networks:
      - appnet
    deploy:
      resources:
        limits:
          cpus: '2.0'

volumes:
  postgres_data:
  minio_data:

networks:
  appnet:
