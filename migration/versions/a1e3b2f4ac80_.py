"""

Revision ID: a1e3b2f4ac80
Revises: 7a6d1eadcea3
Create Date: 2025-04-19 10:39:32.244238

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a1e3b2f4ac80'
down_revision: Union[str, None] = '7a6d1eadcea3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('products', sa.Column('is_subs', sa.Boolean(), nullable=False, comment='Подписка или разовая покупка'))
    op.add_column('products', sa.Column('billing_cycle', sa.String(), nullable=True, comment='Месяц, год'))
    op.add_column('products', sa.Column('features', sa.String(), nullable=True, comment="Список фич. Хранится как ['Фича 1', 'Фича 2']"))
    op.add_column('products', sa.Column('is_can_select_gpt_model', sa.Boolean(), nullable=False, comment='Может выбирать модель GPT'))
    op.add_column('products', sa.Column('cta_text', sa.String(), nullable=True, comment='Текст кнопки'))
    op.add_column('products', sa.Column('gpt_request_limit_one_file', sa.Integer(), nullable=True, comment='Лимит запросов в GPT по одному файлу'))
    op.add_column('products', sa.Column('vtt_file_ext_support', sa.Boolean(), nullable=False, comment='Поддерживается скачивание расшифровки в VTT формате'))
    op.add_column('products', sa.Column('srt_file_ext_support', sa.Boolean(), nullable=False, comment='Поддерживается скачивание расшифровки в SRT формате'))
    op.alter_column('products', 'display_name',
               existing_type=sa.VARCHAR(),
               comment="Название продукта, например '100 минут'",
               existing_nullable=False)
    op.alter_column('products', 'slug',
               existing_type=sa.VARCHAR(),
               comment="Слаг продукта, например '100-minutes'",
               existing_nullable=False)
    op.alter_column('products', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               comment='Цена без скидки',
               existing_nullable=False)
    op.alter_column('products', 'price_with_discount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               comment='Цена со скидкой',
               existing_nullable=True)
    op.alter_column('products', 'discount_deadline',
               existing_type=postgresql.TIMESTAMP(),
               comment='Срок действия скидки',
               existing_nullable=True)
    op.alter_column('products', 'minute_count',
               existing_type=sa.INTEGER(),
               comment='Количество минут',
               existing_nullable=False)
    op.alter_column('products', 'discount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               comment='Процент скидки',
               existing_nullable=False)
    op.alter_column('products', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment='Активен ли продукт',
               existing_nullable=False)
    op.alter_column('products', 'sort_order',
               existing_type=sa.INTEGER(),
               comment='Порядок сортировки',
               existing_nullable=False)
    op.alter_column('user_products', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               comment='Сумма оплаты',
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_products', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               comment=None,
               existing_comment='Сумма оплаты',
               existing_nullable=False)
    op.alter_column('products', 'sort_order',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Порядок сортировки',
               existing_nullable=False)
    op.alter_column('products', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='Активен ли продукт',
               existing_nullable=False)
    op.alter_column('products', 'discount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               comment=None,
               existing_comment='Процент скидки',
               existing_nullable=False)
    op.alter_column('products', 'minute_count',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Количество минут',
               existing_nullable=False)
    op.alter_column('products', 'discount_deadline',
               existing_type=postgresql.TIMESTAMP(),
               comment=None,
               existing_comment='Срок действия скидки',
               existing_nullable=True)
    op.alter_column('products', 'price_with_discount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               comment=None,
               existing_comment='Цена со скидкой',
               existing_nullable=True)
    op.alter_column('products', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               comment=None,
               existing_comment='Цена без скидки',
               existing_nullable=False)
    op.alter_column('products', 'slug',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment="Слаг продукта, например '100-minutes'",
               existing_nullable=False)
    op.alter_column('products', 'display_name',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment="Название продукта, например '100 минут'",
               existing_nullable=False)
    op.drop_column('products', 'srt_file_ext_support')
    op.drop_column('products', 'vtt_file_ext_support')
    op.drop_column('products', 'gpt_request_limit_one_file')
    op.drop_column('products', 'cta_text')
    op.drop_column('products', 'is_can_select_gpt_model')
    op.drop_column('products', 'features')
    op.drop_column('products', 'billing_cycle')
    op.drop_column('products', 'is_subs')
    # ### end Alembic commands ###
