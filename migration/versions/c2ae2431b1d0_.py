"""

Revision ID: c2ae2431b1d0
Revises: 
Create Date: 2025-04-16 17:38:07.667912

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c2ae2431b1d0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('price_with_discount', sa.Float(), nullable=True),
    sa.Column('discount_deadline', sa.DateTime(), nullable=True),
    sa.Column('minute_count', sa.Integer(), nullable=False),
    sa.Column('discount', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('user_email_with_code',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('code', sa.Integer(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('firebase_token', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_files',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('file_url', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('external_id', sa.Uuid(), nullable=True),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('transcription', postgresql.JSONB(none_as_null=True, astext_type=sa.Text()), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True, comment='Длительность файла в секундах'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id')
    )
    op.create_table('user_products',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('minute_count', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('transactions',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('product_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('metainfo', sa.JSON(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('user_product_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.uuid'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_product_id'], ['user_products.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('user_products_to_products',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('user_product', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.uuid'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_product'], ['user_products.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_products_to_products')
    op.drop_table('transactions')
    op.drop_table('user_products')
    op.drop_table('user_files')
    op.drop_table('users')
    op.drop_table('user_email_with_code')
    op.drop_table('products')
    # ### end Alembic commands ###
